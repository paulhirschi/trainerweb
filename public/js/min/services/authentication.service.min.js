!function(){"use strict";angular.module("authService",[]).factory("Auth",["$rootScope","$window","$http","$q","AuthToken",function(e,t,o,n,r){var a={};return a.login=function(e){return o.post("/api/authenticate",{data:e}).then(function(e){return console.log(e),r.setToken(e.data.token,e.data.name),e})},a.logout=function(){r.setToken()},a.signup=function(e){return o.post("/api/users/",e).then(function(e){return e})},a.isLoggedIn=function(){return!!t.localStorage.getItem("token")},a.getUser=function(){return r.getToken()?o.get("/api/me",{cache:!0}):n.reject({message:"User has no token"})},a}]).factory("AuthToken",["$rootScope","$window",function(e,t){var o={};return o.getToken=function(){return t.localStorage.getItem("token")},o.setToken=function(o,n){if(o){t.localStorage.setItem("token",o);var r=new Date,a=r.getTime();t.localStorage.setItem("ts",a),t.localStorage.setItem("user",n),e.user=n}else t.localStorage.removeItem("token"),t.localStorage.removeItem("ts"),t.localStorage.removeItem("user"),e.user=""},o}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,t,o){var n={};return n.request=function(e){var t=o.getToken();return t&&(e.headers["x-access-token"]=t),e},n.responseError=function(o){return 403===o.status&&t.path("/login"),e.reject(o)},n}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2F1dGhlbnRpY2F0aW9uLnNlcnZpY2UubWluLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJmYWN0b3J5IiwiJHJvb3RTY29wZSIsIiR3aW5kb3ciLCIkaHR0cCIsIiRxIiwiQXV0aFRva2VuIiwiYXV0aEZhY3RvcnkiLCJsb2dpbiIsImxvZ2luRGF0YSIsInBvc3QiLCJkYXRhIiwidGhlbiIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJzZXRUb2tlbiIsInRva2VuIiwibmFtZSIsImxvZ291dCIsInNpZ251cCIsInNpZ251cERhdGEiLCJpc0xvZ2dlZEluIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImdldFVzZXIiLCJnZXRUb2tlbiIsImdldCIsImNhY2hlIiwicmVqZWN0IiwibWVzc2FnZSIsImF1dGhUb2tlbkZhY3RvcnkiLCJzZXRJdGVtIiwiZCIsIkRhdGUiLCJuIiwiZ2V0VGltZSIsInVzZXIiLCJyZW1vdmVJdGVtIiwiJGxvY2F0aW9uIiwiaW50ZXJjZXB0b3JGYWN0b3J5IiwicmVxdWVzdCIsImNvbmZpZyIsImhlYWRlcnMiLCJyZXNwb25zZUVycm9yIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJwYXRoIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQUNFLFlBRUFBLFNBQVFDLE9BQU8sa0JBT1pDLFFBQVEsUUFBUyxhQUFjLFVBQVcsUUFBUyxLQUFNLFlBQ3hELFNBQVNDLEVBQVlDLEVBQVNDLEVBQU9DLEVBQUlDLEdBQ3pDLEdBQUlDLEtBa0RKLE9BL0NBQSxHQUFZQyxNQUFRLFNBQVNDLEdBQzNCLE1BQU9MLEdBQU1NLEtBQUsscUJBQ2hCQyxLQUFNRixJQUNMRyxLQUFLLFNBQVNDLEdBR2YsTUFGQUMsU0FBUUMsSUFBSUYsR0FDWlAsRUFBVVUsU0FBU0gsRUFBSUYsS0FBS00sTUFBT0osRUFBSUYsS0FBS08sTUFDckNMLEtBS1hOLEVBQVlZLE9BQVMsV0FFbkJiLEVBQVVVLFlBR1pULEVBQVlhLE9BQVMsU0FBU0MsR0FDNUIsTUFBT2pCLEdBQU1NLEtBQUssY0FBZVcsR0FDOUJULEtBQUssU0FBU0MsR0FDYixNQUFPQSxNQUtiTixFQUFZZSxXQUFhLFdBRXZCLFFBQUduQixFQUFRb0IsYUFBYUMsUUFBUSxVQVFsQ2pCLEVBQVlrQixRQUFVLFdBQ3BCLE1BQUduQixHQUFVb0IsV0FDSnRCLEVBQU11QixJQUFJLFdBQ2ZDLE9BQU8sSUFHRnZCLEVBQUd3QixRQUNSQyxRQUFTLHVCQU1SdkIsS0FNUk4sUUFBUSxhQUFjLGFBQWMsVUFBVyxTQUFTQyxFQUFZQyxHQUNuRSxHQUFJNEIsS0F3QkosT0FyQkFBLEdBQWlCTCxTQUFXLFdBQzFCLE1BQU92QixHQUFRb0IsYUFBYUMsUUFBUSxVQUl0Q08sRUFBaUJmLFNBQVcsU0FBU0MsRUFBT0MsR0FDMUMsR0FBR0QsRUFBTyxDQUNSZCxFQUFRb0IsYUFBYVMsUUFBUSxRQUFTZixFQUN0QyxJQUFJZ0IsR0FBSSxHQUFJQyxNQUNSQyxFQUFJRixFQUFFRyxTQUNWakMsR0FBUW9CLGFBQWFTLFFBQVEsS0FBTUcsR0FDbkNoQyxFQUFRb0IsYUFBYVMsUUFBUSxPQUFRZCxHQUNyQ2hCLEVBQVdtQyxLQUFPbkIsTUFFbEJmLEdBQVFvQixhQUFhZSxXQUFXLFNBQ2hDbkMsRUFBUW9CLGFBQWFlLFdBQVcsTUFDaENuQyxFQUFRb0IsYUFBYWUsV0FBVyxRQUNoQ3BDLEVBQVdtQyxLQUFPLElBSWZOLEtBS1I5QixRQUFRLG1CQUFvQixLQUFNLFlBQWEsWUFDOUMsU0FBU0ksRUFBSWtDLEVBQVdqQyxHQUN0QixHQUFJa0MsS0FvQkosT0FqQkFBLEdBQW1CQyxRQUFVLFNBQVNDLEdBQ3BDLEdBQUl6QixHQUFRWCxFQUFVb0IsVUFJdEIsT0FIR1QsS0FDRHlCLEVBQU9DLFFBQVEsa0JBQW9CMUIsR0FFOUJ5QixHQUlURixFQUFtQkksY0FBZ0IsU0FBU0MsR0FLMUMsTUFKdUIsT0FBcEJBLEVBQVNDLFFBQ1ZQLEVBQVVRLEtBQUssVUFHVjFDLEVBQUd3QixPQUFPZ0IsSUFHWkwiLCJmaWxlIjoic2VydmljZXMvYXV0aGVudGljYXRpb24uc2VydmljZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyLm1vZHVsZSgnYXV0aFNlcnZpY2UnLCBbXSlcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBhdXRoIGZhY3RvcnkgdG8gbG9naW4gYW5kIGdldCBpbmZvcm1hdGlvblxuICAgIC8vIGluamVjdCAkaHR0cCBmb3IgY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBhcGlcbiAgICAvLyBpbmplY3QgJHEgdG8gcmV0dXJuIHByb21pc2Ugb2JqZWN0c1xuICAgIC8vIGluamVjdCBBdXRoVG9rZW4gdG8gbWFuYWdlIHRva2Vuc1xuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgIC5mYWN0b3J5KCdBdXRoJywgWyckcm9vdFNjb3BlJywgJyR3aW5kb3cnLCAnJGh0dHAnLCAnJHEnLCAnQXV0aFRva2VuJyxcbiAgICAgIGZ1bmN0aW9uKCRyb290U2NvcGUsICR3aW5kb3csICRodHRwLCAkcSwgQXV0aFRva2VuKSB7XG4gICAgICB2YXIgYXV0aEZhY3RvcnkgPSB7fTtcblxuICAgICAgLy8gSGFuZGxlIGxvZ2luXG4gICAgICBhdXRoRmFjdG9yeS5sb2dpbiA9IGZ1bmN0aW9uKGxvZ2luRGF0YSkge1xuICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9hdXRoZW50aWNhdGUnLCB7XG4gICAgICAgICAgZGF0YTogbG9naW5EYXRhXG4gICAgICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICBBdXRoVG9rZW4uc2V0VG9rZW4ocmVzLmRhdGEudG9rZW4sIHJlcy5kYXRhLm5hbWUpO1xuICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH0pO1xuICAgICAgfTtcblxuICAgICAgLy8gSGFuZGxlIGxvZ291dFxuICAgICAgYXV0aEZhY3RvcnkubG9nb3V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIENsZWFyIHRoZSB0b2tlblxuICAgICAgICBBdXRoVG9rZW4uc2V0VG9rZW4oKTtcbiAgICAgIH07XG5cbiAgICAgIGF1dGhGYWN0b3J5LnNpZ251cCA9IGZ1bmN0aW9uKHNpZ251cERhdGEpIHtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMvJywgc2lnbnVwRGF0YSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICAvLyBjaGVjayBpZiBhIHVzZXIgaXMgbG9nZ2VkIGluXG4gICAgICBhdXRoRmFjdG9yeS5pc0xvZ2dlZEluID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIGNoZWNrcyBpZiB0aGVyZSBpcyBhIGxvY2FsIHRva2VuXG4gICAgICAgIGlmKCR3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIC8vIGdldCB0aGUgdXNlciBpbmZvXG4gICAgICBhdXRoRmFjdG9yeS5nZXRVc2VyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmKEF1dGhUb2tlbi5nZXRUb2tlbigpKSB7XG4gICAgICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9tZScsIHtcbiAgICAgICAgICAgIGNhY2hlOiB0cnVlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICRxLnJlamVjdCh7XG4gICAgICAgICAgICBtZXNzYWdlOiAnVXNlciBoYXMgbm8gdG9rZW4nXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIC8vIHJldHVybiBhdXRoIGZhY3Rvcnkgb2JqZWN0XG4gICAgICByZXR1cm4gYXV0aEZhY3Rvcnk7XG4gICAgfV0pXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gZmFjdG9yeSBmb3IgaGFuZGxpbmcgdG9rZW5zXG4gICAgLy8gaW5qZWN0ICR3aW5kb3cgdG8gc3RvcmUgdG9rZW4gY2xpZW50LXNpZGVcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAuZmFjdG9yeSgnQXV0aFRva2VuJywgWyckcm9vdFNjb3BlJywgJyR3aW5kb3cnLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkd2luZG93KSB7XG4gICAgICB2YXIgYXV0aFRva2VuRmFjdG9yeSA9IHt9O1xuXG4gICAgICAvLyBHZXQgdGhlIHRva2VuXG4gICAgICBhdXRoVG9rZW5GYWN0b3J5LmdldFRva2VuID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xuICAgICAgfTtcblxuICAgICAgLy8gU2V0IG9yIGNsZWFyIHRoZSB0b2tlblxuICAgICAgYXV0aFRva2VuRmFjdG9yeS5zZXRUb2tlbiA9IGZ1bmN0aW9uKHRva2VuLCBuYW1lKSB7XG4gICAgICAgIGlmKHRva2VuKSB7XG4gICAgICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCB0b2tlbik7XG4gICAgICAgICAgdmFyIGQgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgIHZhciBuID0gZC5nZXRUaW1lKCk7XG4gICAgICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndHMnLCBuKTtcbiAgICAgICAgICAkd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgbmFtZSk7XG4gICAgICAgICAgJHJvb3RTY29wZS51c2VyID0gbmFtZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAkd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpO1xuICAgICAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3RzJyk7XG4gICAgICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpO1xuICAgICAgICAgICRyb290U2NvcGUudXNlciA9ICcnO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gYXV0aFRva2VuRmFjdG9yeTtcbiAgICB9XSlcbiAgICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBhcHAgY29uZmlnIHRvIGludGVncmF0ZSB0b2tlbiBpbnRvIHJlcXVlc3RzXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gICAgLmZhY3RvcnkoJ0F1dGhJbnRlcmNlcHRvcicsIFsnJHEnLCAnJGxvY2F0aW9uJywgJ0F1dGhUb2tlbicsXG4gICAgICBmdW5jdGlvbigkcSwgJGxvY2F0aW9uLCBBdXRoVG9rZW4pIHtcbiAgICAgICAgdmFyIGludGVyY2VwdG9yRmFjdG9yeSA9IHt9O1xuXG4gICAgICAgIC8vIEF0dGFjaCB0b2tlbiB0byBldmVyeSByZXF1ZXN0XG4gICAgICAgIGludGVyY2VwdG9yRmFjdG9yeS5yZXF1ZXN0ID0gZnVuY3Rpb24oY29uZmlnKSB7XG4gICAgICAgICAgdmFyIHRva2VuID0gQXV0aFRva2VuLmdldFRva2VuKCk7XG4gICAgICAgICAgaWYodG9rZW4pIHtcbiAgICAgICAgICAgIGNvbmZpZy5oZWFkZXJzWyd4LWFjY2Vzcy10b2tlbiddID0gdG9rZW47XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjb25maWc7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gcmVkaXJlY3QgaWYgYSB0b2tlbiBkb2Vzbid0IGF1dGhlbnRpY2F0ZVxuICAgICAgICBpbnRlcmNlcHRvckZhY3RvcnkucmVzcG9uc2VFcnJvciA9IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgaWYocmVzcG9uc2Uuc3RhdHVzID09PSA0MDMpIHtcbiAgICAgICAgICAgICRsb2NhdGlvbi5wYXRoKCcvbG9naW4nKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gcmV0dXJuIHNlcnZlciBlcnJvcnMgYXMgYSBwcm9taXNlXG4gICAgICAgICAgcmV0dXJuICRxLnJlamVjdChyZXNwb25zZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIGludGVyY2VwdG9yRmFjdG9yeTtcbiAgICAgIH1dKTtcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
